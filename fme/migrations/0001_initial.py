# Generated by Django 4.2.13 on 2025-07-19 21:58

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated_at')),
                ('role', models.CharField(choices=[('ADMIN', 'Administrator'), ('SCHOOL_ADMIN', 'School Administrator'), ('LEARNER', 'Learner'), ('MENTOR', 'Mentor'), ('FACILITATOR', 'Facilitator')], max_length=20)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('DISABLED', 'Disabled')], default='DISABLED', max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='NinVerificationProcess',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated_at')),
                ('nin', models.CharField(blank=True, db_index=True, max_length=20, null=True, unique=True)),
                ('nin_detail', models.JSONField(blank=True, null=True)),
                ('nin_is_verified', models.BooleanField(default=False)),
                ('phone_number', models.CharField(db_index=True, max_length=20)),
                ('verification_token', models.CharField(db_index=True, max_length=10)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-updated_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MentorProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated_at')),
                ('role_at_company', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('specialization', models.CharField(max_length=100)),
                ('highest_qualification', models.CharField(max_length=100)),
                ('institution', models.CharField(max_length=100)),
                ('areas_of_expertise', models.TextField()),
                ('current_mentees_count', models.PositiveIntegerField(default=0)),
                ('overall_mentees_count', models.PositiveIntegerField(default=0)),
                ('completed_sessions', models.PositiveIntegerField(default=0)),
                ('rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=3)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mentor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-updated_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LearnerProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated_at')),
                ('account_type', models.CharField(choices=[('STUDENT', 'Student'), ('PROFESSIONAL', 'Professional')], max_length=20)),
                ('learning_track', models.CharField(max_length=100)),
                ('skill_cluster', models.CharField(max_length=100)),
                ('work_type', models.CharField(choices=[('ALL', 'All'), ('ONSITE', 'Onsite'), ('REMOTE', 'Remote')], max_length=20)),
                ('industrial_prefrence', models.CharField(max_length=100)),
                ('portfolio_link', models.URLField(blank=True, null=True)),
                ('state', models.CharField(choices=[('ABIA', 'Abia'), ('ADAMAWA', 'Adamawa'), ('AKWA IBOM', 'Akwa Ibom'), ('ANAMBRA', 'Anambra'), ('BAUCHI', 'Bauchi'), ('BAYELSA', 'Bayelsa'), ('BENUE', 'Benue'), ('BORNO', 'Borno'), ('CROSS RIVER', 'Cross River'), ('DELTA', 'Delta'), ('EBONYI', 'Ebonyi'), ('EDO', 'Edo'), ('EKITI', 'Ekiti'), ('ENUGU', 'Enugu'), ('FCT', 'Fct'), ('GOMBE', 'Gombe'), ('IMO', 'Imo'), ('JIGAWA', 'Jigawa'), ('KADUNA', 'Kaduna'), ('KANO', 'Kano'), ('KATSINA', 'Katsina'), ('KEBBI', 'Kebbi'), ('KOGI', 'Kogi'), ('KWARA', 'Kwara'), ('LAGOS', 'Lagos'), ('NASARAWA', 'Nasarawa'), ('NIGER', 'Niger'), ('OGUN', 'Ogun'), ('ONDO', 'Ondo'), ('OSUN', 'Osun'), ('OYO', 'Oyo'), ('PLATEAU', 'Plateau'), ('RIVERS', 'Rivers'), ('SOKOTO', 'Sokoto'), ('TARABA', 'Taraba'), ('YOBE', 'Yobe'), ('ZAMFARA', 'Zamfara')], max_length=25)),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female')], max_length=20)),
                ('resume', models.CharField(blank=True, max_length=200, null=True)),
                ('progress', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='learner_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-updated_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated_at')),
                ('email', models.EmailField(max_length=254)),
                ('expires_at', models.DateTimeField()),
                ('role', models.CharField(choices=[('ADMIN', 'Administrator'), ('SCHOOL_ADMIN', 'School Administrator'), ('LEARNER', 'Learner'), ('MENTOR', 'Mentor'), ('FACILITATOR', 'Facilitator')], max_length=20)),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-updated_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FacilitatorProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated_at')),
                ('specialization', models.CharField(max_length=100)),
                ('years_of_experience', models.PositiveIntegerField()),
                ('highest_qualification', models.CharField(max_length=100)),
                ('institution', models.CharField(max_length=100)),
                ('areas_of_expertise', models.TextField()),
                ('students_count', models.PositiveIntegerField(default=0)),
                ('completed_sessions', models.PositiveIntegerField(default=0)),
                ('rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=3)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='facilitator_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-updated_at',),
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='fme_user_role_8d4426_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['status'], name='fme_user_status_a5dee1_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['last_active'], name='fme_user_last_ac_85bc02_idx'),
        ),
    ]
